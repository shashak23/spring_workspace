package my.spring.springweb.sample05;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;

public class ModelAttributeController {
	
	Logger log = LogManager.getLogger("case3");
	
	
	
	@ModelAttribute("v1")   
	// 메소드 위에 이걸 줄떄에는 annotation에 이름을 줘야해요! 
	// -> why? 이 메소드는 핸들러는 호출되기 이전에 먼저 호출되는 메소드여서!
	// -> 그리고 해당 메소드의 리턴값이 어디에 저장되냐면 모델에 자동으로 저장이 돼요 
	public String createString() {  //일반 메소드  --> 얘가 결과적으로는 jsp에 있는 문자열이 나온다!
	
		log.debug("문자열 객체 생성");
		return "고양이는 냐옹냐옹";
	} // v1이라는 key 값으로 return값이 나오고 여기는 먼저 호출되는 곳이고 
	
	@ModelAttribute("v2")
	public User createUser() {
	
		log.debug("VO 객체 생성");
		User user = new User(25, "김베리", "컴공과");
		return user;
	} // 근데 또 이게 순서개념은 없어요
	
	@ModelAttribute("data1")
	public int createNumber1() {
	
		log.debug("첫 번째 숫자 생성");
		return 100;
	}
	

	@ModelAttribute("data2")
	public int createNumber2() {
	
		log.debug("두 번째 숫자 생성");
		return 200;
	}
	
	//핸들러 만들기
	@RequestMapping(value="modelAttributes1") // 위에 있는 data1을 댕겨서 받아보기 
	public String myMethod(@ModelAttribute("data1") int num1,  // model attribute로 결정된 key들을 model에 받아서 사용할 수 있음
			@ModelAttribute("data2") int num2) {
		
		log.debug("handler 호출");
		return "sampe05/modelResult";
	}
}

package my.spring.springweb.sample07;


import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;

import my.spring.springweb.sample07.vo.Student;

@Controller
@SessionAttributes({ "data1", "kim" , "newStudent"})
@RequestMapping(value = "/sessionAttributesTest04")
public class SessionAttributeController04 {

	Logger log = LogManager.getLogger("case3");
	

	@ModelAttribute("data1")
	public String createString1() {
		log.debug("createString1() 호출되었어요!");
		return "createString1";
	}

	@ModelAttribute("data2") // 모델객체 주입받기 
	public String createString2(Model model) {   // 맵핑이 잡힌 핸들러에서만 하는게 아니고 여기서도 가능해요 

		Student student = new Student(30,"신사임당","국어국문");
		model.addAttribute("kim", model);  // 모델객체가 해당 객체로 리턴이 됐을 떄 그때 이름이 kim이 있으면 session에 들어간다 ! 
		log.debug("createString2() 호출되었어요!"); // 모델말고 session에도 저장을 해주는 걸 해 보는 겁니다?
		
		return "createString2";
	}
	
	@PostMapping
	public String handler(@ModelAttribute("data1") String str1,
			@ModelAttribute("data2") String str2,
			@RequestParam(value = "msg") String requestMsg,
			@ModelAttribute("newStudent") Student studentVO,
			Model model) {
		
		log.debug("handler()에서 출력 : " + str1 + ", " + str2);
		log.debug("msg : " + requestMsg);
		log.debug("student : " + studentVO);
		
		
		return "sample07/sessionResult04";
	}
}
